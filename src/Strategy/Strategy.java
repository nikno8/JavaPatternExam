package Strategy;

public interface Strategy {
     void doAction();
}


//        Паттерн Стратегия (Strategy) - это поведенческий паттерн проектирования, который позволяет
//        определять набор алгоритмов,
//        инкапсулировать каждый из них и делать их взаимозаменяемыми.
//
//        Основное назначение паттерна Стратегия заключается в том,
//        чтобы обеспечить гибкую замену алгоритмов в
//        ходе выполнения программы. Этот паттерн следует использовать,
//        когда необходимо использовать различные
//        варианты алгоритмов в зависимости от конкретной ситуации
//        либо когда необходима динамическая замена поведения объекта во время выполнения.
//
//        Примером, когда может использоваться паттерн Стратегия, может быть ситуация,
//        когда у нас есть некий класс, реализующий конкретный алгоритм, и мы хотим,
//        чтобы наша программа могла использовать другой алгоритм по необходимости.
//        В этом случае мы можем выделить алгоритмы в отдельные классы-стратегии,
//        инкапсулировать каждый из них и делать их взаимозаменяемыми.