package Adapter;

public class IceRoadAdapter implements Road{
    private IceRoad road;

    public IceRoadAdapter() {
        road = new IceRoad();
    }

    @Override
    public void run() {
        road.walk();
    }
}


//        Паттерн адаптер (Adapter) - это структурный паттерн проектирования, который позволяет объектам с
//        несовместимыми интерфейсами работать вместе.
//
//        Основная задача паттерна адаптер заключается в том, чтобы преобразовать интерфейс одного класса в интерфейс,
//        ожидаемый другим классом. В результате объекты этих классов смогут взаимодействовать друг с другом,
//        несмотря на несовместимость их интерфейсов.
//
//        Примером, когда может понадобиться использование паттерна адаптера, может являться интеграция приложения с
//        различными библиотеками или API, имеющими разные интерфейсы. В этом случае вы можете создать адаптеры,
//        которые будут преобразовывать интерфейс API или библиотеки в интерфейс, который ожидается вашим приложением.